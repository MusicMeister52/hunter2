# Generated by Django 3.2.11 on 2022-01-27 23:54

from django.conf import settings
from django.db import migrations, models
from gdpr_assist.models import PrivacyModel

relations = ('invites', 'members', 'requests')
relation_cache = {}


def cache_team_user_relations(apps, schema_editor):
    Team = apps.get_model('teams', 'Team')
    for relation in relations:
        relation_cache[relation] = dict()
        for team in Team.objects.all().prefetch_related('invites', 'members', 'requests'):
            relation_manager = getattr(team, relation)
            relation_cache[relation][team.id] = [up.user.id for up in relation_manager.all()]
            relation_manager.clear()


def cache_team_user_profile_relations(apps, schema_editor):
    Team = apps.get_model('teams', 'Team')
    for relation in relations:
        relation_cache[relation] = dict()
        for team in Team.objects.all():
            relation_manager = getattr(team, relation)
            # The related manager query here has to drop the implicit prefetch related introduced by gdpr_assist
            # because required base classes aren't injected when getting the model from `get_model`
            relation_cache[relation][team.id] = [u.profile.id for u in relation_manager.all().prefetch_related(None)]
            relation_manager.clear()


def restore_team_relations(apps, schema_editor):
    Team = apps.get_model('teams', 'Team')
    for relation in relations:
        for team_id, users in relation_cache[relation].items():
            team = Team.objects.get(id=team_id)
            for user in users:
                getattr(team, relation).add(user)



class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teams', '0007_auto_20210126_2357'),
    ]

    operations = [
        migrations.RunPython(
            code=cache_team_user_relations,
            reverse_code=restore_team_relations,
        ),
        migrations.AlterField(
            model_name='team',
            name='invites',
            field=models.ManyToManyField(blank=True, related_name='team_invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='teams', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='team',
            name='requests',
            field=models.ManyToManyField(blank=True, related_name='team_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RunPython(
            code=restore_team_relations,
            reverse_code=cache_team_user_profile_relations,
        ),
    ]
