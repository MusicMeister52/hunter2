# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-04-05 19:31
from __future__ import unicode_literals

from django.contrib.sites.models import Site
from django.db import migrations, models
from django.utils.text import slugify
import django.db.models.deletion
import django_tenants.postgresql_backend.base


class Migration(migrations.Migration):

    def create_tenants(apps, schema_editor):

        def domainify(s):
            return slugify(s).replace('_', '-')

        try:
            domain = Site.objects.get().domain
        except Site.DoesNotExist:
            site = Site()
            site.domain = 'hunter2.local'
            site.name = 'Default Site Name'
            domain = 'hunter2.local'

        Tenant = apps.get_model('events', 'Tenant')
        t = Tenant()
        t.schema_name = 'public'
        t.save()

        Domain = apps.get_model('events', 'Domain')
        d = Domain()
        d.domain = domain
        d.tenant = t
        d.save()

        Event = apps.get_model('events', 'Event')
        for event in Event.objects.all():
            subdomain = domainify(event.name)
            t = Tenant()
            t.schema_name = subdomain
            t.save()
            d = Domain()
            d.domain = '.'.join([subdomain, domain])
            d.tenant = t
            d.save()


    dependencies = [
        ('events', '0010_event_examples_text'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(max_length=63, unique=True, validators=[django_tenants.postgresql_backend.base._check_schema_name])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='events.Tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(create_tenants),
        migrations.AddField(
            model_name='event',
            name='tenant',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='events.Tenant'),
            preserve_default=False,
        ),
    ]
