# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-12 09:07
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_tenants.postgresql_backend.base
import events.fields
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(max_length=63, unique=True, validators=[django_tenants.postgresql_backend.base._check_schema_name])),
                ('name', models.CharField(max_length=255, unique=True)),
                ('current', events.fields.SingleTrueBooleanField()),
                ('about_text', models.TextField(blank=True, help_text='Content for the event about page')),
                ('rules_text', models.TextField(blank=True, help_text='Content for the event rules page')),
                ('help_text', models.TextField(blank=True, help_text='Content for the event help page')),
                ('examples_text', models.TextField(blank=True, help_text='Content for the example puzzles for this event')),
                ('max_team_size', models.IntegerField(default=0, help_text='Maximum size for a team at this event, or 0 for no limit.', validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('file', models.FileField(upload_to=events.models.event_file_path)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('script', models.TextField(blank=True)),
                ('style', models.TextField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theme', to='events.Theme'),
        ),
        migrations.AddField(
            model_name='domain',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='events.Event'),
        ),
        migrations.AlterUniqueTogether(
            name='eventfile',
            unique_together=set([('event', 'slug')]),
        ),
    ]
