stages:
  - test
  - stage2
  - release

before_script:
  - chmod -R g-w,o-w .
  - ln -s docker-compose.test.yml docker-compose.yml

include:
  template: SAST.gitlab-ci.yml

check:flake8:
  image:
    name: registry.gitlab.com/rconan/docker-flake8:3.7.8-0
    entrypoint: [""]
  stage: test
  script:
    - flake8 --verbose

check:eslint:
  image:
    name: registry.gitlab.com/rconan/docker-eslint:6.2.2-0
    entrypoint: [""]
  stage: test
  script:
    - /node_modules/.bin/eslint "${CI_PROJECT_DIR}"

.image_template: &image_template
  image:
    name: registry.gitlab.com/rconan/docker-kaniko:0.14.0-0
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}" > /kaniko/.docker/config.json
    - export DOCKER_CONFIG=/kaniko/.docker/
    - DOCKER_TAG="$([[ "${CI_COMMIT_REF_NAME}" == "${CI_DEFAULT_BRANCH}" ]] || echo "${CI_COMMIT_REF_SLUG}-")$(git describe)"
    - /kaniko/executor --context "${CI_PROJECT_DIR}${REPO_PATH}" --dockerfile "${CI_PROJECT_DIR}${REPO_PATH}/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/${SERVICE}:${DOCKER_TAG}" --build-arg BUILD_TAG="${DOCKER_TAG}" --reproducible
  stage: test
  variables:
    REPO_PATH: ""

image:app:
  <<: *image_template
  variables:
    SERVICE: app

image:metrics:
  <<: *image_template
  variables:
    REPO_PATH: /prometheus
    SERVICE: metrics

image:web:
  <<: *image_template
  stage: stage2
  dependencies:
    - image:app
  variables:
    REPO_PATH: /nginx
    SERVICE: web

doc:graph:
  stage: stage2
  dependencies:
    - image:app
  script:
    - docker load -i app.tar
    - install -d -m 777 diagram
    - docker run --rm --entrypoint "sh" -v "${PWD}/diagram:/diagram" "${CI_REGISTRY_IMAGE}/app:${GIT_DESCRIBE}" -c "python manage.py graph_models -a > /diagram/models.dot"
    - docker-compose -f docker-compose.check.yml run --rm dot
  artifacts:
    expire_in: 90 days
    name: models-graph
    paths:
      - diagram/models.*

test:app:
  stage: stage2
  dependencies:
    - image:app
  variables:
    SERVICE: app
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i "${SERVICE}.tar"
    - install -d -m 777 coverage
    - docker-compose run -e H2_TEST_SEED=1 -v "${PWD}/coverage:/usr/src/app/coverage" --entrypoint "python" "${SERVICE}" -Wd -m coverage run --source . manage.py test -v 2
    - docker run -v "${PWD}/coverage:/usr/src/app/coverage" --entrypoint "python" "${IMAGE_TAG}" -m coverage html
    - docker run -v "${PWD}/coverage:/usr/src/app/coverage" --entrypoint "python" "${IMAGE_TAG}" -m coverage report
  artifacts:
    expire_in: 180 days
    name: coverage
    paths:
      - coverage/
  coverage: /\d+\%\s*$/

release:app:
  stage: release
  dependencies:
    - image:app
  variables:
    SERVICE: app
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i "${SERVICE}.tar"
    - docker-compose push "${SERVICE}"
    - docker tag "${IMAGE_TAG}" "${CI_REGISTRY_IMAGE}/${SERVICE}"
    - docker push "${CI_REGISTRY_IMAGE}/${SERVICE}"
  only:
    - master

release:metrics:
  stage: release
  dependencies:
    - image:metrics
  variables:
    SERVICE: metrics
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i "${SERVICE}.tar"
    - docker-compose push "${SERVICE}"
    - docker tag "${IMAGE_TAG}" "${CI_REGISTRY_IMAGE}/${SERVICE}"
    - docker push "${CI_REGISTRY_IMAGE}/${SERVICE}"
  only:
    - master

release:web:
  stage: release
  dependencies:
    - image:web
  variables:
    SERVICE: web
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i "${SERVICE}.tar"
    - docker-compose push "${SERVICE}"
    - docker tag "${IMAGE_TAG}" "${CI_REGISTRY_IMAGE}/${SERVICE}"
    - docker push "${CI_REGISTRY_IMAGE}/${SERVICE}"
  only:
    - master
