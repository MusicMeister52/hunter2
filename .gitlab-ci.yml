image: registry.gitlab.com/rconan/docker-and-compose:1.22.0-2

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:18.06.1-ce-dind

stages:
  - check
  - build-app
  - web-doc-test
  - release

before_script:
  - export GIT_DESCRIBE=$(git describe)
  - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
  - chmod -R g-w,o-w .
  - ln -s docker-compose.test.yml docker-compose.yml

check:flake8:
  stage: check
  script:
    - docker-compose -f docker-compose.check.yml run --rm flake8 --verbose

check:jshint:
  stage: check
  script:
    - docker-compose -f docker-compose.check.yml run --rm jshint

image:app:
  stage: build-app
  variables:
    SERVICE: app
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker-compose build "${SERVICE}"
    - install -d -m 777 diagram
    - docker-compose run --entrypoint "sh" "${SERVICE}" -c "python manage.py graph_models -a > diagram/models.dot"
    - docker save -o "${SERVICE}.tar" "${IMAGE_TAG}"
  artifacts:
    expire_in: 90 days
    name: app-container
    paths:
      - "${SERVICE}.tar"
      - diagram/models.dot

image:web:
  stage: web-doc-test
  dependencies:
    - image:app
  variables:
    SERVICE: web
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i app.tar
    - docker-compose build --build-arg app_tag="${GIT_DESCRIBE}" "${SERVICE}"
    - docker save -o "${SERVICE}.tar" "${IMAGE_TAG}"
  artifacts:
    expire_in: 90 days
    name: web-container
    paths:
      - "${SERVICE}.tar"

doc:graph:
  stage: web-doc-test
  dependencies:
    - image:app
  script:
    - docker-compose -f docker-compose.check.yml run --rm dot
  artifacts:
    expire_in: 90 days
    name: models-graph
    paths:
      - diagram/models.svg

test:app:
  stage: web-doc-test
  dependencies:
    - image:app
  variables:
    SERVICE: app
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i "${SERVICE}.tar"
    - install -d -m 777 coverage
    - docker-compose run -e H2_TEST_SEED=1 --entrypoint "python" "${SERVICE}" -Wd -m coverage run --source . manage.py test -v 2
    - docker-compose run --entrypoint "python" "${SERVICE}" -m coverage html
    - docker-compose run --entrypoint "python" "${SERVICE}" -m coverage report
  artifacts:
    expire_in: 180 days
    name: coverage
    paths:
      - coverage/
  coverage: /\d+\%\s*$/

release:app:
  stage: release
  dependencies:
    - image:app
  variables:
    SERVICE: app
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i "${SERVICE}.tar"
    - docker-compose push "${SERVICE}"
    - docker tag "${IMAGE_TAG}" "${CI_REGISTRY_IMAGE}/${SERVICE}"
    - docker push "${CI_REGISTRY_IMAGE}/${SERVICE}"
  only:
    - master

release:web:
  stage: release
  dependencies:
    - image:web
  variables:
    SERVICE: web
  script:
    - export IMAGE_TAG="${CI_REGISTRY_IMAGE}/${SERVICE}:${GIT_DESCRIBE}"
    - docker load -i "${SERVICE}.tar"
    - docker-compose push "${SERVICE}"
    - docker tag "${IMAGE_TAG}" "${CI_REGISTRY_IMAGE}/${SERVICE}"
    - docker push "${CI_REGISTRY_IMAGE}/${SERVICE}"
  only:
    - master

sast:
  stage: web-doc-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]

dast:
  stage: web-doc-test
  image: registry.gitlab.com/gitlab-org/security-products/zaproxy
  variables:
    website: "https://example.com"
  allow_failure: true
  script:
    - mkdir /zap/wrk/
    - /zap/zap-baseline.py -J gl-dast-report.json -t $website || true
    - cp /zap/wrk/gl-dast-report.json .
  artifacts:
    paths: [gl-dast-report.json]

dependency_scanning:
  stage: web-doc-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
