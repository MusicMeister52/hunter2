# We mount an empty dir onto /usr/local/openresty/nginx/logs so the symlinks don't work
error_log /dev/stderr error;
access_log /dev/stdout combined;

lua_shared_dict prometheus_metrics 10M;
init_worker_by_lua_file worker.lua;

upstream app {
    server 127.0.0.1;

    balancer_by_lua_block {
        balancer(app_hostname, 3031)
    }
}

upstream websocket {
    server 127.0.0.1;

    balancer_by_lua_block {
        balancer(websocket_hostname, 8000)
    }
}

server {
    listen 8080;

    server_name _;

    location /health {
        access_log off;
        return 200 "OK\n";
    }

    location /favicon.ico {
        root /static;
    }

    location /static {
        root /;
    }

    location /media/puzzles {
        internal;
        root /;
    }

    location /media/solutions {
        internal;
        root /;
    }

    location /media {
        root /;
    }

    location /ws {
        resolver local=on;
        proxy_pass http://websocket;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
    }

    location / {
        client_max_body_size 256m;

        resolver local=on;

        include /usr/local/openresty/nginx/conf/uwsgi_params;
        uwsgi_pass uwsgi://app;
    }
}

log_by_lua_block {
  metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
  metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
}

server {
    listen 9145;

    location /metrics {
        content_by_lua '
            metric_connections:set(ngx.var.connections_reading, {"reading"})
            metric_connections:set(ngx.var.connections_waiting, {"waiting"})
            metric_connections:set(ngx.var.connections_writing, {"writing"})
            prometheus:collect()
        ';
    }
}
